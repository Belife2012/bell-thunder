#ifndef _WT588_H_
#define _WT588_H_

#include "Arduino.h"
#include <FreeRTOS.h>

typedef enum
{
    SOUND_MUSIC_A0 = 0,
    SOUND_MUSIC_A1,
    SOUND_MUSIC_A2,
    SOUND_MUSIC_A3,
    SOUND_MUSIC_A4,
    SOUND_MUSIC_A5,
    SOUND_MUSIC_A6,
    SOUND_MUSIC_A_1,
    SOUND_MUSIC_AP0,
    SOUND_MUSIC_AP1,
    SOUND_MUSIC_AP2,
    SOUND_MUSIC_AP3,
    SOUND_MUSIC_AP4,
    SOUND_MUSIC_AP5,
    SOUND_MUSIC_AP6,
    SOUND_MUSIC_AP_1,
    SOUND_MUSIC_B0,
    SOUND_MUSIC_B1,
    SOUND_MUSIC_B2,
    SOUND_MUSIC_B3,
    SOUND_MUSIC_B4,
    SOUND_MUSIC_B5,
    SOUND_MUSIC_B6,
    SOUND_MUSIC_B_1,
    SOUND_MUSIC_C0,
    SOUND_MUSIC_C1,
    SOUND_MUSIC_C2,
    SOUND_MUSIC_C3,
    SOUND_MUSIC_C4,
    SOUND_MUSIC_C5,
    SOUND_MUSIC_C6,
    SOUND_MUSIC_C7,
    SOUND_MUSIC_CP0,
    SOUND_MUSIC_CP1,
    SOUND_MUSIC_CP2,
    SOUND_MUSIC_CP3,
    SOUND_MUSIC_CP4,
    SOUND_MUSIC_CP5,
    SOUND_MUSIC_CP6,
    SOUND_MUSIC_D0,
    SOUND_MUSIC_D1,
    SOUND_MUSIC_D2,
    SOUND_MUSIC_D3,
    SOUND_MUSIC_D4,
    SOUND_MUSIC_D5,
    SOUND_MUSIC_D6,
    SOUND_MUSIC_DP0,
    SOUND_MUSIC_DP1,
    SOUND_MUSIC_DP2,
    SOUND_MUSIC_DP3,
    SOUND_MUSIC_DP4,
    SOUND_MUSIC_DP5,
    SOUND_MUSIC_DP6,
    SOUND_MUSIC_E0,
    SOUND_MUSIC_E1,
    SOUND_MUSIC_E2,
    SOUND_MUSIC_E3,
    SOUND_MUSIC_E4,
    SOUND_MUSIC_E5,
    SOUND_MUSIC_E6,
    SOUND_MUSIC_F0,
    SOUND_MUSIC_F1,
    SOUND_MUSIC_F2,
    SOUND_MUSIC_F3,
    SOUND_MUSIC_F4,
    SOUND_MUSIC_F5,
    SOUND_MUSIC_F6,
    SOUND_MUSIC_FP0,
    SOUND_MUSIC_FP1,
    SOUND_MUSIC_FP2,
    SOUND_MUSIC_FP3,
    SOUND_MUSIC_FP4,
    SOUND_MUSIC_FP5,
    SOUND_MUSIC_FP6,
    SOUND_MUSIC_G0,
    SOUND_MUSIC_G1,
    SOUND_MUSIC_G2,
    SOUND_MUSIC_G3,
    SOUND_MUSIC_G4,
    SOUND_MUSIC_G5,
    SOUND_MUSIC_G6,
    SOUND_MUSIC_GP0,
    SOUND_MUSIC_GP1,
    SOUND_MUSIC_GP2,
    SOUND_MUSIC_GP3,
    SOUND_MUSIC_GP4,
    SOUND_MUSIC_GP5,
    SOUND_MUSIC_GP6,
    SOUND_GUITAR_AM,
    SOUND_GUITAR_BM,
    SOUND_GUITAR_C,
    SOUND_GUITAR_DM,
    SOUND_GUITAR_EM,
    SOUND_GUITAR_F,
    SOUND_GUITAR_G,
    SOUND_ENGLISH_SEND,
    SOUND_ENGLISH_WHINY,
    SOUND_ENGLISH_RECEIVE,
    SOUND_ENGLISH_GOODDD,
    SOUND_ENGLISH_GOOD,
    SOUND_ENGLISH_NOTHAPPY,
    SOUND_ENGLISH_LETSGO,
    SOUND_ENGLISH_OHMYGOD,
    SOUND_ENGLISH_OHNO,
    SOUND_ENGLISH_AMAZING,
    SOUND_ENGLISH_VOC,
    SOUND_ENGLISH_SOHAPPY,
    SOUND_ENGLISH_AHHHH,
    SOUND_ENGLISH_AIIII,
    SOUND_ENGLISH_AOOOO,
    SOUND_ENGLISH_HAHAHA,
    SOUND_CHINESE_HUM,
    SOUND_CHINESE_WHISTLE,
    SOUND_CHINESE_LALALA,
    SOUND_CHINESE_EMEMEM,
    SOUND_CHINESE_ROAR,
    SOUND_CHINESE_AWESOME,
    SOUND_CHINESE_SOHAPPY,
    SOUND_CHINESE_WAWAWA,
    SOUND_CHINESE_WAWAO,
    SOUND_CHINESE_WAO,
    SOUND_CHINESE_WUWUWU,
    SOUND_CHINESE_YEYEYE,
    SOUND_CHINESE_YOYOYO,
    SOUND_CHINESE_WHAT,
    SOUND_MACHINE_PLANE,
    SOUND_MACHINE_LANDING,
    SOUND_MACHINE_TRAIN,
    SOUND_MACHINE_BRAKE,
    SOUND_MACHINE_CAR,
    SOUND_MACHINE_TRUMPET,
    SOUND_MACHINE_SHIP,
    SOUND_MACHINE_TYRE,
    SOUND_MACHINE_MOTORBIKE,
    SOUND_MACHINE_SPORTCAR,
    SOUND_MACHINE_RACING,
    SOUND_MACHINE_JET,
    SOUND_MACHINE_TANK,
    SOUND_MACHINE_TRACTOR,
    SOUND_MACHINE_ENGINE,
    SOUND_MACHINE_COPTER,
    SOUND_ANIMAL_ELEPHANT,
    SOUND_ANIMAL_COCK,
    SOUND_ANIMAL_DOG,
    SOUND_ANIMAL_DINOSAUR,
    SOUND_ANIMAL_WOLF,
    SOUND_ANIMAL_TIGER,
    SOUND_ANIMAL_CAT,
    SOUND_ANIMAL_BIRD,
    SOUND_ANIMAL_GOAT,
    SOUND_ANIMAL_LION,
    SOUND_ANIMAL_PIG,
    SOUND_FUNCTION_CRACKER,
    SOUND_FUNCTION_GLASS,
    SOUND_FUNCTION_EAT,
    SOUND_FUNCTION_HICCUP,
    SOUND_FUNCTION_THUNDER,
    SOUND_FUNCTION_CANNON,
    SOUND_FUNCTION_WATER,
    SOUND_FUNCTION_PHONE,
    SOUND_FUNCTION_ALARM,
    SOUND_FUNCTION_FART,
    SOUND_FUNCTION_WIND,
    SOUND_FUNCTION_SEA,
    SOUND_FUNCTION_DRINKING,
    SOUND_FUNCTION_GUN,
    SOUND_FUNCTION_CUT,
    SOUND_FUNCTION_DOORBELL,
    SOUND_FUNCTION_KNOCK,
    SOUND_FUNCTION_TOLL,
    SOUND_FUNCTION_BOMB,
    SOUND_FUNCTION_SHOOT,
    SOUND_FUNCTION_CLEANER,
    SOUND_FUNCTION_RAIN,
    SOUND_FUNCTION_BULLET,
} enum_speaker;

class SPEAKER_WT588
{
public:
    SPEAKER_WT588(int DataPin, int BusyPin); // 配置引脚

    int WT588_Busy_Check(void); // 获取播放状态

    /*--------------Thunder IDE APIs: -------------*/
    void Set_Sound_Volume(int data); // 音量调节 范围0~15
    void Play_Song(int data);        // 播放声音
private:
    int Data_pin;
    int Busy_pin;
    FreeRTOS::Semaphore semaphorePlay = FreeRTOS::Semaphore("play");

    void send_data(int data); // 类内部使用，按WT588一线串口时序图发送数据
};
#endif