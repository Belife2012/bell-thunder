#include <display_thunder.h>

#if 1
const LedDotLocation led_location_16D35[LED_MATRIX_COL_NUM][LED_MATRIX_ROW_NUM] = {
  // 从1开始，0位置放置了寄存器地址
  {{1, 7},{2, 7},{3, 7},{4, 7},{5, 7},{6, 7},{7, 7},{8, 7},{9, 7},{10, 7},{11, 7},{12, 7},{13, 7},{14, 7},{15, 7},{16, 7},{17, 7},{18, 7}},
  {{1, 6},{2, 6},{3, 6},{4, 6},{5, 6},{6, 6},{7, 6},{8, 6},{9, 6},{10, 6},{11, 6},{12, 6},{13, 6},{14, 6},{15, 6},{16, 6},{17, 6},{18, 6}},
  {{1, 5},{2, 5},{3, 5},{4, 5},{5, 5},{6, 5},{7, 5},{8, 5},{9, 5},{10, 5},{11, 5},{12, 5},{13, 5},{14, 5},{15, 5},{16, 5},{17, 5},{18, 5}},
  {{1, 4},{2, 4},{3, 4},{4, 4},{5, 4},{6, 4},{7, 4},{8, 4},{9, 4},{10, 4},{11, 4},{12, 4},{13, 4},{14, 4},{15, 4},{16, 4},{17, 4},{18, 4}},
  {{1, 3},{2, 3},{3, 3},{4, 3},{5, 3},{6, 3},{7, 3},{8, 3},{9, 3},{10, 3},{11, 3},{12, 3},{13, 3},{14, 3},{15, 3},{16, 3},{17, 3},{18, 3}},
  {{1, 2},{2, 2},{3, 2},{4, 2},{5, 2},{6, 2},{7, 2},{8, 2},{9, 2},{10, 2},{11, 2},{12, 2},{13, 2},{14, 2},{15, 2},{16, 2},{17, 2},{18, 2}},
  {{1, 1},{2, 1},{3, 1},{4, 1},{5, 1},{6, 1},{7, 1},{8, 1},{9, 1},{10, 1},{11, 1},{12, 1},{13, 1},{14, 1},{15, 1},{16, 1},{17, 1},{18, 1}},
  {{1, 0},{2, 0},{3, 0},{4, 0},{5, 0},{6, 0},{7, 0},{8, 0},{9, 0},{10, 0},{11, 0},{12, 0},{13, 0},{14, 0},{15, 0},{16, 0},{17, 0},{18, 0}},
  {{19, 7},{19, 3},{20, 7},{20, 3},{21, 7},{21, 3},{22, 7},{22, 3},{23, 7},{23, 3},{24, 7},{24, 3},{25, 7},{25, 3},{26, 7},{26, 3},{27, 7},{27, 3}},
  {{19, 6},{19, 2},{20, 6},{20, 2},{21, 6},{21, 2},{22, 6},{22, 2},{23, 6},{23, 2},{24, 6},{24, 2},{25, 6},{25, 2},{26, 6},{26, 2},{27, 6},{27, 2}},
  {{19, 5},{19, 1},{20, 5},{20, 1},{21, 5},{21, 1},{22, 5},{22, 1},{23, 5},{23, 1},{24, 5},{24, 1},{25, 5},{25, 1},{26, 5},{26, 1},{27, 5},{27, 1}},
  {{19, 4},{19, 0},{20, 4},{20, 0},{21, 4},{21, 0},{22, 4},{22, 0},{23, 4},{23, 0},{24, 4},{24, 0},{25, 4},{25, 0},{26, 4},{26, 0},{27, 4},{27, 0}},
  };

byte led_display_dots[LED_MATRIX_COL_NUM][LED_MATRIX_ROW_NUM] = {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
};

const uint8_t LED_No_char[LED_MATRIX_COL_NUM][SINGLE_CHARACTER_WIDTH] = {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x01, 0x00, 0x01, 0x00, 0x00},
  {0x00, 0x01, 0x00, 0x01, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x01, 0x00, 0x01, 0x00, 0x00},
  {0x00, 0x01, 0x00, 0x01, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x01, 0x00, 0x01, 0x00, 0x00},
  {0x00, 0x01, 0x00, 0x01, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
};
const uint8_t LED_Minus_Symbol[LED_MATRIX_COL_NUM][SINGLE_CHARACTER_WIDTH] = {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
};
const uint8_t LED_Point_Symbol[LED_MATRIX_COL_NUM][SINGLE_CHARACTER_WIDTH] = {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x01, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x01, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
};
const uint8_t LED_number_char[10][LED_MATRIX_COL_NUM][SINGLE_CHARACTER_WIDTH] = {
  
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x01, 0x01, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x01, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x01, 0x00, 0x00},
  {0x00, 0x01, 0x00, 0x01, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x01, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x01, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x01, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x01, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
};
const uint8_t LED_alphabet_char[26][LED_MATRIX_COL_NUM][SINGLE_CHARACTER_WIDTH] = {
  
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x01, 0x00, 0x01, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x01, 0x01, 0x01, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x01, 0x01, 0x01, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x01, 0x01, 0x01, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x01, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x01, 0x01, 0x01, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x01, 0x01, 0x01, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x01, 0x00, 0x00},
  {0x01, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x01, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x01, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x01, 0x00, 0x01, 0x01, 0x00},
  {0x01, 0x00, 0x01, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x01, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x01, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x01, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x01, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x01, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x01, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x01, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x01, 0x01, 0x01, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x01, 0x01, 0x01, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x01, 0x01, 0x01, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x01, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x01, 0x00, 0x00},
  {0x00, 0x01, 0x01, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x00, 0x00},
  {0x01, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x01, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x01, 0x01, 0x01, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x01, 0x01, 0x01, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x01, 0x01, 0x01, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x01, 0x01, 0x01, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x01, 0x00, 0x01, 0x00, 0x00},
  {0x00, 0x01, 0x00, 0x01, 0x00, 0x00},
  {0x00, 0x01, 0x00, 0x01, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x01, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x01, 0x00, 0x01, 0x00},
  {0x01, 0x01, 0x00, 0x01, 0x01, 0x00},
  {0x01, 0x01, 0x00, 0x01, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x01, 0x00, 0x01, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x01, 0x00, 0x01, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x01, 0x00, 0x01, 0x00, 0x00},
  {0x00, 0x01, 0x00, 0x01, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x01, 0x00, 0x00},
  {0x00, 0x00, 0x01, 0x00, 0x00, 0x00},
  {0x00, 0x01, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}
};
#endif

// 单色图案
uint8_t LED_BUFF[29] =  
{
  0x00, //地址
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00  //不用的
};

const uint8_t LED_Clear[29] =  
{
  0x00, //地址
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00  //不用的
};

const uint8_t LED_Set[29] =  
{
  0x00, //地址
  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF, 0xFF,0xFF,0xFF,0xFF,
  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  0x00  //不用的
};

const uint8_t LED_SHOW1[29] =  
{
  0x00, //地址
0X04,0X0E,0X1F,0X3F,0X1F,0X0E,0X1F,0X0E,0X3F,0X0E,0X1F,0X0E,0X1F,0X7F,0X00,0X00,0X70,0X00,0X10,0X00,0X00,0X10,0X00,0X70,0X20,0X20,0X70,
  0x00  //不用的
};
const uint8_t LED_SHOW2[29] =  
{
  0x00, //地址
0X04,0X0E,0X1F,0X7F,0X1F,0X0E,0X04,0X04,0X0E,0X04,0X04,0X04,0X0E,0X3F,0X00,0X00,0X10,0X00,0X00,0X00,0X00,0X30,0X00,0X20,0X20,0X20,0X70,
  0x00  //不用的
};
const uint8_t LED_SHOW3[29] =  
{
  0x00, //地址
0X04,0X0E,0X1F,0X3F,0X1F,0X0E,0X04,0X04,0X04,0X04,0X04,0X0E,0X0E,0X1F,0X10,0X00,0X00,0X00,0X00,0X00,0X00,0X10,0X00,0XFC,0XF8,0X70,0X70,
  0x00  //不用的
};
const uint8_t LED_SHOW4[29] =  
{
  0x00, //地址
0X0E,0X0E,0X0E,0X1F,0X3F,0X0E,0X1F,0X3F,0XFF,0X0E,0X04,0X1F,0X0E,0X0E,0X30,0X00,0X00,0X10,0X07,0X01,0X01,0X00,0X00,0XFE,0XF8,0X70,0XF8,
  0x00  //不用的
};
const uint8_t LED_SHOW5[29] =  
{
  0x00, //地址
0X1F,0X0E,0X04,0X0E,0X04,0X0E,0X1F,0X3F,0X7F,0X1F,0X0E,0X1F,0X04,0X3F,0X00,0X00,0X10,0X00,0X30,0X10,0X00,0X00,0X00,0XF8,0X70,0X70,0X70,
  0x00  //不用的
};
const uint8_t LED_SHOW6[29] =  
{
  0x00, //地址
0X00,0X0F,0X18,0X1E,0X1E,0X1E,0X18,0X0F,0X00,0X00,0X0F,0X18,0X1E,0X1E,0X1E,0X18,0X0F,0X00,0X00,0X88,0X88,0X80,0X00,0X08,0X88,0X88,0X00,
  0x00  //不用的
};
const uint8_t LED_SHOW7[29] =  
{
  0x00, //地址
0X00,0X0F,0X1F,0X1F,0X1F,0X1F,0X1F,0X0F,0X00,0X00,0X0F,0X1F,0X1F,0X1F,0X1F,0X1F,0X0F,0X00,0X00,0X88,0X88,0X80,0X00,0X08,0X88,0X88,0X00,
  0x00  //不用的
};
const uint8_t LED_SHOW11[29] =  
{
  0x00, //地址
0X00,0X0F,0X1F,0X1F,0X1F,0X1F,0X1F,0X0F,0X00,0X00,0X0F,0X1F,0X1F,0X1F,0X1F,0X1F,0X0F,0X00,0X00,0X88,0X88,0X80,0X00,0X08,0X88,0X88,0X00,
  0x00  //不用的
};
const uint8_t LED_SHOW12[29] =  
{
  0x00, //地址
0X00,0X07,0X07,0X07,0X07,0X07,0X07,0X0F,0X00,0X00,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X00,0X00,0X88,0X88,0X80,0X00,0X08,0X88,0X88,0X00,
  0x00  //不用的
};
const uint8_t LED_SHOW13[29] =  
{
  0x00, //地址
0X00,0X07,0X07,0X07,0X07,0X07,0X07,0X07,0X00,0X00,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X0F,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
  0x00  //不用的
};
const uint8_t LED_SHOW14[29] =  
{
  0x00, //地址
0X02,0X02,0X02,0X02,0X02,0X02,0X02,0X02,0X02,0X02,0X02,0X02,0X02,0X02,0X02,0X02,0X02,0X02,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
  0x00  //不用的
};
const uint8_t LED_SHOW15[29] =  
{
  0x00, //地址
0X00,0X02,0X07,0X07,0X07,0X07,0X07,0X02,0X00,0X00,0X02,0X07,0X07,0X07,0X06,0X06,0X03,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
  0x00  //不用的
};
const uint8_t LED_SHOW16[29] =  
{
  0x00, //地址
0X00,0X07,0X07,0X07,0X07,0X07,0X07,0X07,0X00,0X00,0X07,0X07,0X07,0X06,0X06,0X06,0X06,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
  0x00  //不用的
};
const uint8_t LED_SHOW17[29] =  
{
  0x00, //地址
0X00,0X07,0X0F,0X0F,0X0F,0X0F,0X0F,0X07,0X00,0X00,0X07,0X0F,0X0F,0X0F,0X0F,0X0F,0X07,0X00,0X00,0X88,0X88,0X80,0X00,0X08,0X88,0X88,0X00,
  0x00  //不用的
};
const uint8_t LED_SHOW1_1[29] =  
{
  0x00, //地址
0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00  //不用的
};
const uint8_t LED_SHOW1_2[29] =  
{
  0x00, //地址
0x04,0x00,0x04,0x00,0x00,0x00,0x04,0x04,0x04,0x04,0x00,0x04,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00  //不用的
};
const uint8_t LED_SHOW1_3[29] =  
{
  0x00, //地址
0x04,0x00,0x04,0x0A,0x31,0x00,0x7F,0x04,0x04,0x04,0x00,0x7F,0x00,0x00,0x00,0x7F,0x00,0x00,0x00,0x00,0x80,0xc0,0x00,0x0c,0x00,0x0c,0x00,
  0x00  //不用的
};
const uint8_t LED_SHOW1_4[29] =  
{
  0x00, //地址
0x7F,0x40,0x44,0x4A,0x31,0x00,0x7F,0x44,0x44,0x44,0x00,0x7F,0x00,0x00,0x00,0x7F,0x00,0x00,0xc4,0x44,0x80,0xc4,0x44,0x0c,0x44,0x0c,0x44,
  0x00  //不用的
};
const uint8_t LED_SHOW1_5[29] =  
{
  0x00, //地址
0x3F,0x20,0x22,0x25,0x18,0x00,0x3F,0x22,0x22,0x22,0x00,0x3F,0x00,0x00,0x00,0x3F,0x00,0x00,0xe2,0x22,0xc0,0xe2,0x22,0x0e,0x22,0x0e,0x22,
  0x00  //不用的
};
const uint8_t LED_SHOW1_6[29] =  
{
  0x00, //地址
0x00,0x00,0x20,0x11,0x0A,0x7F,0x46,0x29,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0,0x80,0xe,0x24,0x80,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_7[29] =  
{
  0x00, //地址
0x00,0x00,0x00,0x20,0x11,0x0A,0x7F,0x46,0x29,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0,0x8,0x0,0xe2,0x48,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_8[29] =  
{
  0x00, //地址
0x00,0x00,0x20,0x11,0x0A,0x7F,0x46,0x29,0x10,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0,0x80,0xe,0x24,0x80,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_9[29] =  
{
  0x00, //地址
0x00,0x00,0x00,0x20,0x11,0x0A,0x7F,0x46,0x29,0x10,0x06,0x00,0x0F,0x00,0x00,0x00,0x00,0x00,0x0,0x8,0x0,0xe2,0x48,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_10[29] =  
{
  0x00, //地址
0x00,0x00,0x20,0x11,0x0A,0x7F,0x46,0x29,0x10,0x06,0x00,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x0,0x80,0xe,0x24,0x80,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_11[29] =  
{
  0x00, //地址
0x00,0x00,0x00,0x20,0x11,0x0A,0x7F,0x46,0x29,0x10,0x06,0x00,0x00,0x0F,0x00,0x00,0x3F,0x00,0x0,0x8,0x0,0xe2,0x48,0x0,0x0,0x0,0x80,
  0x00  //不用的
};
const uint8_t LED_SHOW1_12[29] =  
{
  0x00, //地址
0x00,0x00,0x20,0x11,0x0A,0x7F,0x46,0x29,0x10,0x06,0x00,0x00,0x0F,0x00,0x00,0x3F,0x00,0x00,0x0,0x80,0xe,0x24,0x80,0x0,0x0,0x8,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_13[29] =  
{
  0x00, //地址
0x00,0x00,0x00,0x20,0x11,0x0A,0x7F,0x46,0x29,0x10,0x06,0x00,0x00,0x0F,0x00,0x00,0x3F,0x00,0x0,0x8,0x0,0xe2,0x48,0x0,0x0,0x0,0x80,
  0x00  //不用的
};
const uint8_t LED_SHOW1_14[29] =  
{
  0x00, //地址
0x00,0x00,0x1F,0x3F,0x3F,0x3F,0x3F,0x1F,0x00,0x00,0x1F,0x3F,0x3F,0x3F,0x3F,0x1F,0x00,0x00,0x0,0x8,0x88,0x80,0x0,0x8,0x88,0x80,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_15[29] =  
{
  0x00, //地址
0x00,0x00,0x0F,0x1F,0x1F,0x1F,0x1F,0x0F,0x00,0x00,0x0F,0x1F,0x1F,0x1F,0x1F,0x0F,0x00,0x00,0x0,0x8c,0xcc,0xc8,0x0,0x8c,0xcc,0xc8,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_16[29] =  
{
  0x00, //地址
0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_17[29] =  
{
  0x00, //地址
0x00,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x00,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x00,0x00,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_18[29] =  
{
  0x00, //地址
0x00,0x0C,0x1E,0x1F,0x0F,0x1F,0x1E,0x0C,0x00,0x00,0x0C,0x1E,0x1F,0x0F,0x1F,0x1E,0x0C,0x00,0x0,0x0,0x80,0x0,0x0,0x0,0x8,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_19[29] =  
{
  0x00, //地址
0x00,0x06,0x0F,0x0F,0x07,0x0F,0x0F,0x06,0x00,0x00,0x06,0x0F,0x0F,0x07,0x0F,0x0F,0x06,0x00,0x0,0x8,0xc8,0x0,0x0,0x0,0x8c,0x80,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_20[29] =  
{
  0x00, //地址
0x08,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x04,0x04,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x08,0x0,0x88,0x88,0x80,0x0,0x8,0x88,0x88,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_21[29] =  
{
  0x00, //地址
0x04,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x02,0x02,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x04,0x8,0xcc,0xcc,0xc8,0x0,0x8c,0xcc,0xcc,0x80,
  0x00  //不用的
};
const uint8_t LED_SHOW1_22[29] =  
{
  0x00, //地址
0x08,0x0F,0x0B,0x0F,0x0F,0x0F,0x0F,0x0F,0x04,0x04,0x0F,0x0B,0x0F,0x0F,0x0F,0x0F,0x0F,0x08,0x0,0x88,0x88,0x80,0x0,0x8,0x88,0x88,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_23[29] =  
{
  0x00, //地址
0x08,0x0F,0x0D,0x0B,0x0F,0x0F,0x0F,0x0F,0x04,0x04,0x0F,0x0D,0x0B,0x0F,0x0F,0x0F,0x0F,0x08,0x0,0x88,0x88,0x80,0x0,0x8,0x88,0x88,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_24[29] =  
{
  0x00, //地址
0x08,0x0F,0x0F,0x0D,0x0B,0x0F,0x0F,0x0F,0x04,0x04,0x0F,0x0F,0x0D,0x0B,0x0F,0x0F,0x0F,0x08,0x0,0x88,0x88,0x80,0x0,0x8,0x88,0x88,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_25[29] =  
{
  0x00, //地址
0x08,0x0F,0x0F,0x0E,0x0D,0x0B,0x0F,0x0F,0x04,0x04,0x0F,0x0F,0x0E,0x0D,0x0B,0x0F,0x0F,0x08,0x0,0x88,0x88,0x80,0x0,0x8,0x88,0x88,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_26[29] =  
{
  0x00, //地址
0x08,0x0F,0x0F,0x0F,0x0E,0x0D,0x0B,0x0F,0x04,0x04,0x0F,0x0F,0x0F,0x0E,0x0D,0x0B,0x0F,0x08,0x0,0x88,0x88,0x80,0x0,0x8,0x88,0x88,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_27[29] =  
{
  0x00, //地址
0x08,0x0F,0x0F,0x0F,0x0F,0x0E,0x0D,0x0F,0x04,0x04,0x0F,0x0F,0x0F,0x0F,0x0E,0x0D,0x0F,0x08,0x0,0x88,0x88,0x80,0x0,0x8,0x88,0x88,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_28[29] =  
{
  0x00, //地址
0x00,0x00,0x08,0x08,0x08,0x08,0x0C,0x0C,0x00,0x00,0x08,0x08,0x08,0x08,0x0C,0x0C,0x00,0x00,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_29[29] =  
{
  0x00, //地址
0x00,0x00,0x00,0x00,0x00,0x0F,0x10,0x21,0x22,0x24,0x28,0x10,0x0F,0x00,0x00,0x00,0x00,0x00,0x0,0x0,0x0,0x84,0x44,0x48,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_30[29] =  
{
  0x00, //地址
0x00,0x00,0x1F,0x3F,0x3F,0x3F,0x3F,0x1F,0x00,0x00,0x1F,0x3F,0x3F,0x3F,0xDF,0x1F,0x80,0x00,0x0,0x8,0x88,0x80,0x0,0x8,0x88,0x80,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_31[29] =  
{
  0x00, //地址
0x00,0x00,0x1F,0x3F,0x3F,0x3F,0x3F,0x1F,0x00,0x00,0x1F,0x3F,0xBF,0x1F,0xEF,0x1F,0xC0,0x00,0x0,0x8,0x88,0x80,0x0,0x8,0x88,0x80,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_32[29] =  
{
  0x00, //地址
0x00,0x00,0x1F,0x3F,0x3F,0x3F,0x3F,0x1F,0x00,0x00,0x1F,0x1F,0xDF,0x0F,0xF7,0x0F,0xE0,0x00,0x0,0x8,0x88,0x80,0x0,0x8,0x88,0x80,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_33[29] =  
{
  0x00, //地址
0x00,0x00,0x0C,0x10,0x10,0x10,0x10,0x0C,0x00,0x00,0x0C,0x10,0x10,0x10,0x10,0x0C,0x00,0x00,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_34[29] =  
{
  0x00, //地址
0x00,0x00,0x06,0x08,0x08,0x08,0x08,0x06,0x00,0x00,0x06,0x08,0x08,0x08,0x08,0x06,0x00,0x00,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_35[29] =  
{
  0x00, //地址
0x00,0x00,0x00,0x00,0x06,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_36[29] =  
{
  0x00, //地址
0x00,0x00,0x00,0x00,0x06,0x06,0x00,0x00,0x06,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_37[29] =  
{
  0x00, //地址
0x00,0x00,0x00,0x00,0x06,0x06,0x00,0x00,0x06,0x06,0x00,0x00,0x06,0x06,0x00,0x00,0x00,0x00,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_38[29] =  
{
  0x00, //地址
0x00,0x00,0x0E,0x1F,0x1F,0x1F,0x1F,0x0E,0x00,0x00,0x00,0x04,0x0A,0x0A,0x11,0x00,0x00,0x00,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_39[29] =  
{
  0x00, //地址
0x00,0x00,0x00,0x00,0x03,0x0C,0x10,0x10,0x10,0x10,0x10,0x10,0x0C,0x03,0x00,0x00,0x00,0x00,0x0,0x0,0x88,0x88,0x88,0x0,0x8,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_40[29] =  
{
  0x00, //地址
0x00,0x00,0x00,0x00,0x03,0x0C,0x12,0x11,0x10,0x10,0x10,0x10,0x0C,0x03,0x00,0x00,0x00,0x00,0x0,0x0,0x80,0x0,0x80,0x0,0x8,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_41[29] =  
{
  0x00, //地址
0x00,0x00,0x00,0x00,0x03,0x0C,0x10,0x10,0x10,0x11,0x12,0x10,0x0C,0x03,0x00,0x00,0x00,0x00,0x0,0x0,0x80,0x0,0x80,0x0,0x8,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_42[29] =  
{
  0x00, //地址
0x00,0x00,0x00,0x00,0x03,0x0C,0x10,0x10,0x10,0x10,0x10,0x10,0x0C,0x03,0x00,0x00,0x00,0x00,0x0,0x0,0x80,0x0,0x88,0x88,0x88,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_43[29] =  
{
  0x00, //地址
0x00,0x00,0x3F,0x1F,0x0F,0x07,0x03,0x01,0x00,0x00,0x01,0x03,0x07,0x0F,0x1F,0x3F,0x00,0x00,0x0,0x8,0x88,0x80,0x0,0x8,0x88,0x80,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_44[29] =  
{
  0x00, //地址
0x00,0x00,0x1F,0x0F,0x07,0x03,0x01,0x00,0x00,0x00,0x00,0x01,0x03,0x07,0x0F,0x1F,0x00,0x00,0x0,0x8c,0xcc,0xc8,0x0,0x8c,0xcc,0xc8,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_45[29] =  
{
  0x00, //地址
0x00,0x00,0x0C,0x0C,0x0F,0x0F,0x0C,0x0C,0x00,0x00,0x0C,0x0C,0x0F,0x0F,0x0C,0x0C,0x00,0x00,0x0,0x0,0xee,0x0,0x0,0x0,0xee,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_46[29] =  
{
  0x00, //地址
0x00,0x00,0x0C,0x0C,0x0F,0x0F,0x0C,0x0C,0x00,0x00,0x0C,0x0C,0x0F,0x0F,0x0C,0x0C,0x00,0x00,0x0,0x20,0xee,0x0,0x0,0x0,0xee,0x2,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_47[29] =  
{
  0x00, //地址
0x00,0x00,0x0C,0x0C,0x0F,0x0F,0x0C,0x0C,0x00,0x00,0x0C,0x0C,0x0F,0x0F,0x0C,0x0C,0x00,0x00,0x4,0x20,0xee,0x0,0x0,0x0,0xee,0x2,0x40,
  0x00  //不用的
};
const uint8_t LED_SHOW1_48[29] =  
{
  0x00, //地址
0x01,0x01,0x01,0x02,0x02,0x02,0x04,0x04,0x08,0x08,0x08,0x04,0x04,0x02,0x01,0x01,0x01,0x02,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_49[29] =  
{
  0x00, //地址
0x00,0x01,0x01,0x01,0x02,0x02,0x02,0x04,0x04,0x08,0x08,0x08,0x04,0x04,0x02,0x01,0x01,0x01,0x80,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_50[29] =  
{
  0x00, //地址
0x00,0x00,0x01,0x01,0x01,0x02,0x02,0x02,0x04,0x04,0x08,0x08,0x08,0x04,0x04,0x02,0x01,0x01,0x88,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_51[29] =  
{
  0x00, //地址
0x00,0x00,0x00,0x01,0x01,0x01,0x02,0x02,0x02,0x04,0x04,0x08,0x08,0x08,0x04,0x04,0x02,0x01,0x88,0x80,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_52[29] =  
{
  0x00, //地址
0x01,0x00,0x00,0x00,0x01,0x01,0x01,0x02,0x02,0x02,0x04,0x04,0x08,0x08,0x08,0x04,0x04,0x02,0x8,0x88,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_53[29] =  
{
  0x00, //地址
0x02,0x01,0x00,0x00,0x00,0x01,0x01,0x01,0x02,0x02,0x02,0x04,0x04,0x08,0x08,0x08,0x04,0x04,0x0,0x88,0x80,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_54[29] =  
{
  0x00, //地址
0x04,0x02,0x01,0x00,0x00,0x00,0x01,0x01,0x01,0x02,0x02,0x02,0x04,0x04,0x08,0x08,0x08,0x04,0x0,0x8,0x88,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_55[29] =  
{
  0x00, //地址
0x04,0x04,0x02,0x01,0x00,0x00,0x00,0x01,0x01,0x01,0x02,0x02,0x02,0x04,0x04,0x08,0x08,0x08,0x0,0x0,0x88,0x80,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_56[29] =  
{
  0x00, //地址
0x04,0x04,0x04,0x02,0x01,0x00,0x00,0x00,0x01,0x01,0x01,0x02,0x02,0x02,0x04,0x04,0x08,0x08,0x0,0x0,0x8,0x88,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_57[29] =  
{
  0x00, //地址
0x08,0x04,0x04,0x04,0x02,0x01,0x00,0x00,0x00,0x01,0x01,0x01,0x02,0x02,0x02,0x04,0x04,0x08,0x0,0x0,0x0,0x88,0x80,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_58[29] =  
{
  0x00, //地址
0x08,0x08,0x04,0x04,0x04,0x02,0x01,0x00,0x00,0x00,0x01,0x01,0x01,0x02,0x02,0x02,0x04,0x04,0x0,0x0,0x0,0x8,0x88,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_59[29] =  
{
  0x00, //地址
0x10,0x08,0x08,0x04,0x04,0x04,0x02,0x01,0x00,0x00,0x00,0x01,0x01,0x01,0x02,0x02,0x02,0x04,0x0,0x0,0x0,0x0,0x88,0x80,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_60[29] =  
{
  0x00, //地址
0x08,0x10,0x08,0x08,0x04,0x04,0x04,0x02,0x01,0x00,0x00,0x00,0x01,0x01,0x01,0x02,0x02,0x02,0x0,0x0,0x0,0x0,0x8,0x88,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_61[29] =  
{
  0x00, //地址
0x08,0x08,0x10,0x08,0x08,0x04,0x04,0x04,0x02,0x01,0x00,0x00,0x00,0x01,0x01,0x01,0x02,0x02,0x0,0x0,0x0,0x0,0x0,0x88,0x80,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_62[29] =  
{
  0x00, //地址
0x04,0x08,0x08,0x10,0x08,0x08,0x04,0x04,0x04,0x02,0x01,0x00,0x00,0x00,0x01,0x01,0x01,0x02,0x0,0x0,0x0,0x0,0x0,0x8,0x88,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_63[29] =  
{
  0x00, //地址
0x02,0x04,0x08,0x08,0x10,0x08,0x08,0x04,0x04,0x04,0x02,0x01,0x00,0x00,0x00,0x01,0x01,0x01,0x0,0x0,0x0,0x0,0x0,0x0,0x88,0x80,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_64[29] =  
{
  0x00, //地址
0x02,0x02,0x04,0x08,0x08,0x10,0x08,0x08,0x04,0x04,0x04,0x02,0x01,0x00,0x00,0x00,0x01,0x01,0x0,0x0,0x0,0x0,0x0,0x0,0x8,0x88,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_65[29] =  
{
  0x00, //地址
0x04,0x02,0x02,0x04,0x08,0x08,0x10,0x08,0x08,0x04,0x04,0x04,0x02,0x01,0x00,0x00,0x00,0x01,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x88,0x80,
  0x00  //不用的
};
const uint8_t LED_SHOW1_66[29] =  
{
  0x00, //地址
0x04,0x04,0x02,0x02,0x04,0x08,0x08,0x10,0x08,0x08,0x04,0x04,0x04,0x02,0x01,0x00,0x00,0x00,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x8,0x88,
  0x00  //不用的
};
const uint8_t LED_SHOW1_67[29] =  
{
  0x00, //地址
0x04,0x04,0x04,0x02,0x02,0x04,0x08,0x08,0x10,0x08,0x08,0x04,0x04,0x04,0x02,0x01,0x00,0x00,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x88,
  0x00  //不用的
};
const uint8_t LED_SHOW1_68[29] =  
{
  0x00, //地址
0x02,0x04,0x04,0x04,0x02,0x02,0x04,0x08,0x08,0x10,0x08,0x08,0x04,0x04,0x04,0x02,0x01,0x00,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x8,
  0x00  //不用的
};
const uint8_t LED_SHOW1_69[29] =  
{
  0x00, //地址
0x02,0x02,0x04,0x04,0x04,0x02,0x02,0x04,0x08,0x08,0x10,0x08,0x08,0x04,0x04,0x04,0x02,0x01,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_70[29] =  
{
  0x00, //地址
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x1C,0x1C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_71[29] =  
{
  0x00, //地址
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x1C,0x3E,0x1C,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_72[29] =  
{
  0x00, //地址
0x04,0x0E,0x1F,0x3F,0x1F,0x0E,0x1F,0x0E,0x3F,0x0E,0x1F,0x0E,0x1F,0x7F,0x0E,0x04,0x04,0x0E,0x0,0x8,0x0,0x0,0x80,0x0,0xe,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_73[29] =  
{
  0x00, //地址
0x04,0x0E,0x1F,0x7F,0x1F,0x0E,0x04,0x04,0x0E,0x04,0x04,0x04,0x0E,0x3F,0x0E,0x04,0x04,0x04,0x0,0xc,0x0,0x0,0x0,0x0,0x8,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_74[29] =  
{
  0x00, //地址
0x04,0x0E,0x1F,0x3F,0x1F,0x0E,0x04,0x04,0x04,0x04,0x04,0x0E,0x0E,0x1F,0x0E,0x0E,0x1E,0x3F,0x0,0x8,0x0,0x0,0x0,0x0,0x0,0x0,0x8,
  0x00  //不用的
};
const uint8_t LED_SHOW1_75[29] =  
{
  0x00, //地址
0x0E,0x0E,0x0E,0x1F,0x3F,0x0E,0x1F,0x3F,0xFF,0x0E,0x04,0x1F,0x0E,0x0E,0x1F,0x0E,0x1F,0x7F,0x0,0x0,0x80,0x8,0xe0,0x0,0x0,0x0,0xc,
  0x00  //不用的
};
const uint8_t LED_SHOW1_76[29] =  
{
  0x00, //地址
0x1F,0x0E,0x04,0x0E,0x04,0x0E,0x1F,0x3F,0x7F,0x1F,0x0E,0x1F,0x04,0x3F,0x0E,0x0E,0x0E,0x1F,0x0,0x0,0x0,0x8,0xc0,0x0,0x8,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_77[29] =  
{
  0x00, //地址
0x01,0x01,0x01,0x02,0x02,0x02,0x04,0x0C,0x1C,0x3E,0x1C,0x0C,0x04,0x02,0x01,0x01,0x01,0x02,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_78[29] =  
{
  0x00, //地址
0x00,0x01,0x01,0x01,0x02,0x02,0x02,0x04,0x1C,0x1C,0x1C,0x08,0x04,0x04,0x02,0x01,0x01,0x01,0x80,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_79[29] =  
{
  0x00, //地址
0x00,0x00,0x01,0x01,0x01,0x02,0x02,0x02,0x0E,0x0E,0x0E,0x08,0x08,0x04,0x04,0x02,0x01,0x01,0x88,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_80[29] =  
{
  0x00, //地址
0x00,0x00,0x00,0x01,0x01,0x01,0x02,0x02,0x07,0x0F,0x07,0x0A,0x08,0x08,0x04,0x04,0x02,0x01,0x88,0x80,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_81[29] =  
{
  0x00, //地址
0x01,0x00,0x00,0x00,0x01,0x01,0x01,0x02,0x07,0x07,0x07,0x04,0x08,0x08,0x08,0x04,0x04,0x02,0x8,0x88,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_82[29] =  
{
  0x00, //地址
0x02,0x01,0x00,0x00,0x00,0x01,0x01,0x03,0x07,0x0F,0x07,0x06,0x04,0x08,0x08,0x08,0x04,0x04,0x0,0x88,0x80,0x0,0x8,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_83[29] =  
{
  0x00, //地址
0x04,0x02,0x01,0x00,0x00,0x00,0x01,0x01,0x03,0x03,0x03,0x02,0x04,0x04,0x08,0x08,0x08,0x04,0x0,0x8,0x88,0x0,0x88,0x80,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_84[29] =  
{
  0x00, //地址
0x04,0x04,0x02,0x01,0x00,0x00,0x00,0x01,0x03,0x07,0x03,0x03,0x02,0x04,0x04,0x08,0x08,0x08,0x0,0x0,0x88,0x80,0x8c,0x80,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_85[29] =  
{
  0x00, //地址
0x04,0x04,0x04,0x02,0x01,0x00,0x00,0x00,0x01,0x01,0x01,0x02,0x02,0x02,0x04,0x04,0x08,0x08,0x0,0x0,0x8,0x88,0xcc,0xc0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_86[29] =  
{
  0x00, //地址
0x08,0x04,0x04,0x04,0x02,0x01,0x00,0x00,0x01,0x03,0x01,0x01,0x02,0x02,0x02,0x04,0x04,0x08,0x0,0x0,0x0,0x88,0xce,0xc8,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_87[29] =  
{
  0x00, //地址
0x08,0x08,0x04,0x04,0x04,0x02,0x01,0x00,0x01,0x01,0x01,0x01,0x01,0x02,0x02,0x02,0x04,0x04,0x0,0x0,0x0,0x8,0xcc,0xc0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_88[29] =  
{
  0x00, //地址
0x10,0x08,0x08,0x04,0x04,0x04,0x02,0x01,0x01,0x03,0x01,0x01,0x01,0x01,0x02,0x02,0x02,0x04,0x0,0x0,0x0,0x8,0xce,0xc8,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_89[29] =  
{
  0x00, //地址
0x08,0x10,0x08,0x08,0x04,0x04,0x04,0x02,0x01,0x01,0x01,0x00,0x01,0x01,0x01,0x02,0x02,0x02,0x0,0x0,0x0,0x0,0xcc,0xc8,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_90[29] =  
{
  0x00, //地址
0x08,0x08,0x10,0x08,0x08,0x04,0x04,0x05,0x03,0x07,0x03,0x01,0x00,0x01,0x01,0x01,0x02,0x02,0x0,0x0,0x0,0x0,0x8c,0x88,0x80,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_91[29] =  
{
  0x00, //地址
0x04,0x08,0x08,0x10,0x08,0x08,0x04,0x04,0x07,0x07,0x07,0x00,0x00,0x00,0x01,0x01,0x01,0x02,0x0,0x0,0x0,0x0,0x0,0x8,0x88,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_92[29] =  
{
  0x00, //地址
0x02,0x04,0x08,0x08,0x10,0x08,0x08,0x04,0x0E,0x1F,0x0E,0x05,0x00,0x00,0x00,0x01,0x01,0x01,0x0,0x0,0x0,0x0,0x0,0x0,0x88,0x80,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_93[29] =  
{
  0x00, //地址
0x02,0x02,0x04,0x08,0x08,0x10,0x08,0x08,0x0E,0x0E,0x0E,0x02,0x01,0x00,0x00,0x00,0x01,0x01,0x0,0x0,0x0,0x0,0x0,0x0,0x8,0x88,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_94[29] =  
{
  0x00, //地址
0x04,0x02,0x02,0x04,0x08,0x08,0x10,0x08,0x1C,0x3E,0x1C,0x0C,0x02,0x01,0x00,0x00,0x00,0x01,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x88,0x80,
  0x00  //不用的
};
const uint8_t LED_SHOW1_95[29] =  
{
  0x00, //地址
0x04,0x04,0x02,0x02,0x04,0x08,0x08,0x10,0x1C,0x1C,0x1C,0x04,0x04,0x02,0x01,0x00,0x00,0x00,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x8,0x88,
  0x00  //不用的
};
const uint8_t LED_SHOW1_96[29] =  
{
  0x00, //地址
0x04,0x04,0x04,0x02,0x02,0x04,0x08,0x18,0x38,0x7C,0x38,0x14,0x04,0x04,0x02,0x01,0x00,0x00,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x88,
  0x00  //不用的
};
const uint8_t LED_SHOW1_97[29] =  
{
  0x00, //地址
0x02,0x04,0x04,0x04,0x02,0x02,0x04,0x08,0x1C,0x1C,0x1C,0x08,0x04,0x04,0x04,0x02,0x01,0x00,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x8,
  0x00  //不用的
};
const uint8_t LED_SHOW1_98[29] =  
{
  0x00, //地址
0x02,0x02,0x04,0x04,0x04,0x02,0x02,0x0C,0x1C,0x3E,0x1C,0x08,0x08,0x04,0x04,0x04,0x02,0x01,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_99[29] =  
{
  0x00, //地址
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x1C,0x1C,0x04,0x04,0x02,0x01,0x01,0x01,0x02,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_100[29] =  
{
  0x00, //地址
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x1C,0x3E,0x1C,0x0C,0x04,0x02,0x01,0x01,0x01,0x02,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  0x00  //不用的
};
const uint8_t LED_SHOW1_101[29] =  
{
  0x00, 
0x00,0x00,0x00,0x0f,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x0f,0x07,0x00,0x00,0x00,0x00,0x08,0x44,0x44,0x44,0x44,0x48,0x00,0x00,
  0x00

};
/////////////////////////////////////////////////////////////////////////////
// uint8_t LED_SHOW1_[29] =  
// {
//   0x00, //地址

//   0x00  //不用的
// };

// 初始化单色点阵灯驱动
void DISPLAY_SCREEN::Setup()
{
  ht16d35b.Setup();
  display_string_len = 0;
}

void DISPLAY_SCREEN::Play_LEDs(const unsigned char *data, int size)
{
  ht16d35b.LED_Show(data, size);
}

// 跑马灯
void DISPLAY_SCREEN::Test_LEDs()
{
  for(int i = 1;i < 29; i++)
  {
    for(int j = 0; j<8; j++){
      delay(200);
      LED_BUFF[i] = 0x01<<j; 
      ht16d35b.LED_Show(LED_BUFF, sizeof(LED_BUFF));
      LED_BUFF[i] = 0x00;
    }
  }
}

// 内置单色点阵图案
// 参数-->内置的单色点阵图案编号
void DISPLAY_SCREEN::Play_Thunder_Picture(int picture_index)
{
  switch(picture_index)
  {
    case 0:
      ht16d35b.LED_Show(LED_Clear, sizeof(LED_Clear));
      break;
    case 1:
      ht16d35b.LED_Show(LED_SHOW1_1, sizeof(LED_SHOW1_1));
      break;
    case 2:
      ht16d35b.LED_Show(LED_SHOW1_2, sizeof(LED_SHOW1_2));
      break;
    case 3:
      ht16d35b.LED_Show(LED_SHOW1_3, sizeof(LED_SHOW1_3));
      break;
    case 4:
      ht16d35b.LED_Show(LED_SHOW1_4, sizeof(LED_SHOW1_4));
      break;
    case 5:
      ht16d35b.LED_Show(LED_SHOW1_5, sizeof(LED_SHOW1_5));
      break;
    case 6:
      ht16d35b.LED_Show(LED_SHOW1_6, sizeof(LED_SHOW1_6));
      break;
    case 7:
      ht16d35b.LED_Show(LED_SHOW1_7, sizeof(LED_SHOW1_7));
      break;
    case 8:
      ht16d35b.LED_Show(LED_SHOW1_8, sizeof(LED_SHOW1_8));
      break;
    case 9:
      ht16d35b.LED_Show(LED_SHOW1_9, sizeof(LED_SHOW1_9));
      break;
    case 10:
      ht16d35b.LED_Show(LED_SHOW1_10, sizeof(LED_SHOW1_10));
      break;
    case 11:
      ht16d35b.LED_Show(LED_SHOW1_11, sizeof(LED_SHOW1_11));
      break;
    case 12:
      ht16d35b.LED_Show(LED_SHOW1_12, sizeof(LED_SHOW1_12));
      break;
    case 13:
      ht16d35b.LED_Show(LED_SHOW1_13, sizeof(LED_SHOW1_13));
      break;
    case 14:
      ht16d35b.LED_Show(LED_SHOW1_14, sizeof(LED_SHOW1_14));
      break;
    case 15:
      ht16d35b.LED_Show(LED_SHOW1_15, sizeof(LED_SHOW1_15));
      break;
    case 16:
      ht16d35b.LED_Show(LED_SHOW1_16, sizeof(LED_SHOW1_16));
      break;
    case 17:
      ht16d35b.LED_Show(LED_SHOW1_17, sizeof(LED_SHOW1_17));
      break;
    case 18:
      ht16d35b.LED_Show(LED_SHOW1_18, sizeof(LED_SHOW1_18));
      break;
    case 19:
      ht16d35b.LED_Show(LED_SHOW1_19, sizeof(LED_SHOW1_19));
      break;
    case 20:
      ht16d35b.LED_Show(LED_SHOW1_20, sizeof(LED_SHOW1_20));
      break;
    case 21:
      ht16d35b.LED_Show(LED_SHOW1_21, sizeof(LED_SHOW1_21));
      break;
    case 22:
      ht16d35b.LED_Show(LED_SHOW1_22, sizeof(LED_SHOW1_22));
      break;
    case 23:
      ht16d35b.LED_Show(LED_SHOW1_23, sizeof(LED_SHOW1_23));
      break;
    case 24:
      ht16d35b.LED_Show(LED_SHOW1_24, sizeof(LED_SHOW1_24));
      break;
    case 25:
      ht16d35b.LED_Show(LED_SHOW1_25, sizeof(LED_SHOW1_25));
      break;
    case 26:
      ht16d35b.LED_Show(LED_SHOW1_26, sizeof(LED_SHOW1_26));
      break;
    case 27:
      ht16d35b.LED_Show(LED_SHOW1_27, sizeof(LED_SHOW1_27));
      break;
    case 28:
      ht16d35b.LED_Show(LED_SHOW1_28, sizeof(LED_SHOW1_28));
      break;
    case 29:
      ht16d35b.LED_Show(LED_SHOW1_29, sizeof(LED_SHOW1_29));
      break;
    case 30:
      ht16d35b.LED_Show(LED_SHOW1_30, sizeof(LED_SHOW1_30));
      break;
    case 31:
      ht16d35b.LED_Show(LED_SHOW1_31, sizeof(LED_SHOW1_31));
      break;
    case 32:
      ht16d35b.LED_Show(LED_SHOW1_32, sizeof(LED_SHOW1_32));
      break;
    case 33:
      ht16d35b.LED_Show(LED_SHOW1_33, sizeof(LED_SHOW1_33));
      break;
    case 34:
      ht16d35b.LED_Show(LED_SHOW1_34, sizeof(LED_SHOW1_34));
      break;
    case 35:
      ht16d35b.LED_Show(LED_SHOW1_35, sizeof(LED_SHOW1_35));
      break;
    case 36:
      ht16d35b.LED_Show(LED_SHOW1_36, sizeof(LED_SHOW1_36));
      break;
    case 37:
      ht16d35b.LED_Show(LED_SHOW1_37, sizeof(LED_SHOW1_37));
      break;
    case 38:
      ht16d35b.LED_Show(LED_SHOW1_38, sizeof(LED_SHOW1_38));
      break;
    case 39:
      ht16d35b.LED_Show(LED_SHOW1_39, sizeof(LED_SHOW1_39));
      break;
    case 40:
      ht16d35b.LED_Show(LED_SHOW1_40, sizeof(LED_SHOW1_40));
      break;
    case 41:
      ht16d35b.LED_Show(LED_SHOW1_41, sizeof(LED_SHOW1_41));
      break;
    case 42:
      ht16d35b.LED_Show(LED_SHOW1_42, sizeof(LED_SHOW1_42));
      break;
    case 43:
      ht16d35b.LED_Show(LED_SHOW1_43, sizeof(LED_SHOW1_43));
      break;
    case 44:
      ht16d35b.LED_Show(LED_SHOW1_44, sizeof(LED_SHOW1_44));
      break;
    case 45:
      ht16d35b.LED_Show(LED_SHOW1_45, sizeof(LED_SHOW1_45));
      break;
    case 46:
      ht16d35b.LED_Show(LED_SHOW1_46, sizeof(LED_SHOW1_46));
      break;
    case 47:
      ht16d35b.LED_Show(LED_SHOW1_47, sizeof(LED_SHOW1_47));
      break;
    case 48:
      ht16d35b.LED_Show(LED_SHOW1_48, sizeof(LED_SHOW1_48));
      break;
    case 49:
      ht16d35b.LED_Show(LED_SHOW1_49, sizeof(LED_SHOW1_49));
      break;
    case 50:
      ht16d35b.LED_Show(LED_SHOW1_50, sizeof(LED_SHOW1_50));
      break;
    case 51:
      ht16d35b.LED_Show(LED_SHOW1_51, sizeof(LED_SHOW1_51));
      break;
    case 52:
      ht16d35b.LED_Show(LED_SHOW1_52, sizeof(LED_SHOW1_52));
      break;
    case 53:
      ht16d35b.LED_Show(LED_SHOW1_53, sizeof(LED_SHOW1_53));
      break;
    case 54:
      ht16d35b.LED_Show(LED_SHOW1_54, sizeof(LED_SHOW1_54));
      break;
    case 55:
      ht16d35b.LED_Show(LED_SHOW1_55, sizeof(LED_SHOW1_55));
      break;
    case 56:
      ht16d35b.LED_Show(LED_SHOW1_56, sizeof(LED_SHOW1_56));
      break;
    case 57:
      ht16d35b.LED_Show(LED_SHOW1_57, sizeof(LED_SHOW1_57));
      break;
    case 58:
      ht16d35b.LED_Show(LED_SHOW1_58, sizeof(LED_SHOW1_58));
      break;
    case 59:
      ht16d35b.LED_Show(LED_SHOW1_59, sizeof(LED_SHOW1_59));
      break;
    case 60:
      ht16d35b.LED_Show(LED_SHOW1_60, sizeof(LED_SHOW1_60));
      break;
    case 61:
      ht16d35b.LED_Show(LED_SHOW1_61, sizeof(LED_SHOW1_61));
      break;
    case 62:
      ht16d35b.LED_Show(LED_SHOW1_62, sizeof(LED_SHOW1_62));
      break;
    case 63:
      ht16d35b.LED_Show(LED_SHOW1_63, sizeof(LED_SHOW1_63));
      break;
    case 64:
      ht16d35b.LED_Show(LED_SHOW1_64, sizeof(LED_SHOW1_64));
      break;
    case 65:
      ht16d35b.LED_Show(LED_SHOW1_65, sizeof(LED_SHOW1_65));
      break;
    case 66:
      ht16d35b.LED_Show(LED_SHOW1_66, sizeof(LED_SHOW1_66));
      break;
    case 67:
      ht16d35b.LED_Show(LED_SHOW1_67, sizeof(LED_SHOW1_67));
      break;
    case 68:
      ht16d35b.LED_Show(LED_SHOW1_68, sizeof(LED_SHOW1_68));
      break;
    case 69:
      ht16d35b.LED_Show(LED_SHOW1_69, sizeof(LED_SHOW1_69));
      break;
    case 70:
      ht16d35b.LED_Show(LED_SHOW1_70, sizeof(LED_SHOW1_70));
      break;
    case 71:
      ht16d35b.LED_Show(LED_SHOW1_71, sizeof(LED_SHOW1_71));
      break;
    case 72:
      ht16d35b.LED_Show(LED_SHOW1_72, sizeof(LED_SHOW1_72));
      break;
    case 73:
      ht16d35b.LED_Show(LED_SHOW1_73, sizeof(LED_SHOW1_73));
      break;
    case 74:
      ht16d35b.LED_Show(LED_SHOW1_74, sizeof(LED_SHOW1_74));
      break;
    case 75:
      ht16d35b.LED_Show(LED_SHOW1_75, sizeof(LED_SHOW1_75));
      break;
    case 76:
      ht16d35b.LED_Show(LED_SHOW1_76, sizeof(LED_SHOW1_76));
      break;
    case 77:
      ht16d35b.LED_Show(LED_SHOW1_77, sizeof(LED_SHOW1_77));
      break;
    case 78:
      ht16d35b.LED_Show(LED_SHOW1_78, sizeof(LED_SHOW1_78));
      break;
    case 79:
      ht16d35b.LED_Show(LED_SHOW1_79, sizeof(LED_SHOW1_79));
      break;
    case 80:
      ht16d35b.LED_Show(LED_SHOW1_80, sizeof(LED_SHOW1_80));
      break;
    case 81:
      ht16d35b.LED_Show(LED_SHOW1_81, sizeof(LED_SHOW1_81));
      break;
    case 82:
      ht16d35b.LED_Show(LED_SHOW1_82, sizeof(LED_SHOW1_82));
      break;
    case 83:
      ht16d35b.LED_Show(LED_SHOW1_83, sizeof(LED_SHOW1_83));
      break;
    case 84:
      ht16d35b.LED_Show(LED_SHOW1_84, sizeof(LED_SHOW1_84));
      break;
    case 85:
      ht16d35b.LED_Show(LED_SHOW1_85, sizeof(LED_SHOW1_85));
      break;
    case 86:
      ht16d35b.LED_Show(LED_SHOW1_86, sizeof(LED_SHOW1_86));
      break;
    case 87:
      ht16d35b.LED_Show(LED_SHOW1_87, sizeof(LED_SHOW1_87));
      break;
    case 88:
      ht16d35b.LED_Show(LED_SHOW1_88, sizeof(LED_SHOW1_88));
      break;
    case 89:
      ht16d35b.LED_Show(LED_SHOW1_89, sizeof(LED_SHOW1_89));
      break;
    case 90:
      ht16d35b.LED_Show(LED_SHOW1_90, sizeof(LED_SHOW1_90));
      break;
    case 91:
      ht16d35b.LED_Show(LED_SHOW1_91, sizeof(LED_SHOW1_91));
      break;
    case 92:
      ht16d35b.LED_Show(LED_SHOW1_92, sizeof(LED_SHOW1_92));
      break;
    case 93:
      ht16d35b.LED_Show(LED_SHOW1_93, sizeof(LED_SHOW1_93));
      break;
    case 94:
      ht16d35b.LED_Show(LED_SHOW1_94, sizeof(LED_SHOW1_94));
      break;
    case 95:
      ht16d35b.LED_Show(LED_SHOW1_95, sizeof(LED_SHOW1_95));
      break;
    case 96:
      ht16d35b.LED_Show(LED_SHOW1_96, sizeof(LED_SHOW1_96));
      break;
    case 97:
      ht16d35b.LED_Show(LED_SHOW1_97, sizeof(LED_SHOW1_97));
      break;
    case 98:
      ht16d35b.LED_Show(LED_SHOW1_98, sizeof(LED_SHOW1_98));
      break;
    case 99:
      ht16d35b.LED_Show(LED_SHOW1_99, sizeof(LED_SHOW1_99));
      break;
    case 100:
      ht16d35b.LED_Show(LED_SHOW1_100, sizeof(LED_SHOW1_100));
      break;
    case 101:
      ht16d35b.LED_Show(LED_SHOW1_101, sizeof(LED_SHOW1_101));
      break;

    case 111:
      ht16d35b.LED_Show(LED_SHOW11, sizeof(LED_SHOW11));
      break;
    case 112:
      ht16d35b.LED_Show(LED_SHOW12, sizeof(LED_SHOW12));
      break;
    case 113:
      ht16d35b.LED_Show(LED_SHOW13, sizeof(LED_SHOW13));
      break;
    case 114:
      ht16d35b.LED_Show(LED_SHOW14, sizeof(LED_SHOW14));
      break;
    case 115:
      ht16d35b.LED_Show(LED_SHOW15, sizeof(LED_SHOW15));
      break;
    case 116:
      ht16d35b.LED_Show(LED_SHOW16, sizeof(LED_SHOW16));
      break;
    case 117:
      ht16d35b.LED_Show(LED_SHOW17, sizeof(LED_SHOW17));
      break;

    case 255:
      ht16d35b.LED_Show(LED_Set, sizeof(LED_Set));
      break;
    default:
      Serial.printf("# No frame, clear frame #\n");
      ht16d35b.LED_Show(LED_Clear, sizeof(LED_Clear));
      break; 
  }
}

/* 
 * 显示字符，长字符串以滚动方式呈现，循环显示 直到 修改显示内容
 * 可输入字符为 '0'~'9' 'A'~'Z' 'a'~'z'，小写字母显示的是大写, 其他字符显示为井号 #
 * 如果显示内容不超过显示范围，将是居中静态显示
 * 最长可以支持40个字符
 * 
 * @parameters: 传入字符串首地址，字符串最长40字节，NULL 表示清空显示
 * @return: 
 */
void DISPLAY_SCREEN::Play_LED_String(const char *playString)
{
  uint8_t i;

  if(playString != NULL){
    display_string_len = strlen(playString);
  }else display_string_len = 0;

  if(display_string_len == 0){
    ht16d35b.LED_Show(LED_Clear, sizeof(LED_Clear));
    return;
  }
  string_row_dots_num = display_string_len * SINGLE_CHARACTER_WIDTH;
  play_string_index = 0;
  play_string_offset = 0;
  start_roll_delay = 0;

  for(i = 0; i < display_string_len; i++){
    if( '0' <= playString[i] && playString[i] <= '9' ){
      play_string_data[i] = &LED_number_char[playString[i] - '0'];
    }else if( 'A' <= playString[i] && playString[i] <= 'Z' ){
      play_string_data[i] = &LED_alphabet_char[playString[i] - 'A'];
    }else if( 'a' <= playString[i] && playString[i] <= 'z' ){
      play_string_data[i] = &LED_alphabet_char[playString[i] - 'a'];
    }else if('-' == playString[i]){
      play_string_data[i] = &LED_Minus_Symbol;
    }else if('.' == playString[i]){
      play_string_data[i] = &LED_Point_Symbol;
    }else{
      play_string_data[i] = &LED_No_char;
    }
  }
  
  if(string_row_dots_num < LED_MATRIX_ROW_NUM){
    display_start_X = (LED_MATRIX_ROW_NUM - string_row_dots_num)/2;
  }else display_start_X = 0;
  
}
/* 
 * 显示数字（可以整数，负数，小数），小数保留最大3位，会进行四舍五入
 * 
 * @parameters: 
 * @return: 
 */
void DISPLAY_SCREEN::Play_LED_String(double number){
  int number_int;
  String number_char;

  number_int = (int)number;

  if( (double)number_int == number ){
    number_char = String(number_int);
  }else{
    number_char = String(number, 3);
  }
  // Serial.println( number_char.c_str() );

  Play_LED_String( number_char.c_str() );

}
void DISPLAY_SCREEN::Play_LED_String(uint32_t number){
  Play_LED_String( (double)number );
}
void DISPLAY_SCREEN::Play_LED_String(int number){
  Play_LED_String( (double)number );
}
void DISPLAY_SCREEN::Play_LED_String(float number){
  Play_LED_String( (double)number );
}

/* 
 * 滚动显示字符时，每次调用此函数，会刷新LED点阵屏为滚动显示的下一帧
 * 建议使用后台守护线程进行刷新
 * 
 * @parameters: 
 * @return: 
 */
void DISPLAY_SCREEN::Play_String_NextFrame()
{
  uint8_t i;
  uint8_t j;
  // 计算从 play_string_data 的什么下标开始，pt_data 的 row偏移量
  byte data_index = 0;
  byte data_offset = 0;
  
  #if 1
  // 没有显示
  if(display_string_len == 0) return;

  data_index = play_string_index;
  data_offset = play_string_offset;

  memset(LED_BUFF, 0, sizeof(LED_BUFF));
  memset(led_display_dots, 0, sizeof(led_display_dots));
  for(j = display_start_X; j < LED_MATRIX_ROW_NUM; j++){
    if( j+1 >= display_start_X + string_row_dots_num ){
      start_roll_delay = 0; // 清零这个参数，可以让显示保持静态
      break;
    }
    for(i = 0; i < LED_MATRIX_COL_NUM; i++){
      led_display_dots[i][j] = (*play_string_data[data_index])[i][data_offset];
    }
    data_offset++;
    if(data_offset == SINGLE_CHARACTER_WIDTH){
      data_offset = 0;
      data_index++;
      if(data_index == display_string_len){
        data_index = 0;
        break; // 显示到 最后一个字符的最后一列
      }
    }
  }
  // 保留移动量，延时开始滚动，因为一开始就滚动会看不清前面的字符
  if(start_roll_delay > 5){
    play_string_offset++;
    if(play_string_offset == SINGLE_CHARACTER_WIDTH){
      play_string_offset = 0;
      play_string_index++;
      if(play_string_index == display_string_len){
        play_string_index = 0;
        start_roll_delay = 0;
      }
    }
  }else start_roll_delay++;

  #else // 用于将 8bit显示数据 转化为 HT16D35 的RAM显示数据格式
  for(j = 0; j < LED_MATRIX_ROW_NUM; j++){
    for(i = 0; i < LED_MATRIX_COL_NUM; i++){
      led_display_dots[i][j] = _acLowPower[i][j];
    }
  }
  #endif

  for(i = 0; i < LED_MATRIX_COL_NUM; i++){
    for(j = 0; j < LED_MATRIX_ROW_NUM; j++){
      LED_BUFF[led_location_16D35[i][j].rowIndex] |= led_display_dots[i][j] << led_location_16D35[i][j].comIndex;
    }
  }

  /* Serial.printf("\n");
  for(i = 0; i < 29; i++){
    Serial.printf("0x%2x, ", LED_BUFF[i]);
  }
  Serial.printf("\n"); */

  ht16d35b.LED_Show(LED_BUFF, sizeof(LED_BUFF));
}

/**
 * @brief: 显示18*12的点阵画面
 * 
 * @param picture_dots: 存有显示数据的二维数组数据
 * @param display_flag: 默认为1 表示立刻显示，0表示仅仅修改显示内存
 */
void DISPLAY_SCREEN::Display_Picture(const byte picture_dots[LED_MATRIX_COL_NUM][LED_MATRIX_ROW_NUM],
                                    byte display_flag)
{
  uint8_t i;
  uint8_t j;
  // 清空字符串显示
  Play_LED_String("");

  memset(LED_BUFF, 0, sizeof(LED_BUFF));
  
  for(j = 0; j < LED_MATRIX_ROW_NUM; j++){
    for(i = 0; i < LED_MATRIX_COL_NUM; i++){
      led_display_dots[i][j] = picture_dots[i][j];
    }
  }

  for(i = 0; i < LED_MATRIX_COL_NUM; i++){
    for(j = 0; j < LED_MATRIX_ROW_NUM; j++){
      LED_BUFF[led_location_16D35[i][j].rowIndex] |= led_display_dots[i][j] << led_location_16D35[i][j].comIndex;
    }
  }

  /* Serial.printf("\n");
  for(i = 0; i < 29; i++){
    Serial.printf("0x%2x, ", LED_BUFF[i]);
  }
  Serial.printf("\n"); */
  if(display_flag == 1){
    ht16d35b.LED_Show(LED_BUFF, sizeof(LED_BUFF));
  }
}

/**
 * @brief: 移动点阵画面
 * 
 * @param x: 水平轴的偏移
 * @param y: 垂直轴的偏移
 */
void DISPLAY_SCREEN::Move_Picture_To(int x, int y)
{
  uint8_t i;
  uint8_t j;
  byte old_picture_dots[LED_MATRIX_COL_NUM][LED_MATRIX_ROW_NUM];

  memset(LED_BUFF, 0, sizeof(LED_BUFF));
  for(j = 0; j < LED_MATRIX_ROW_NUM; j++){
    for(i = 0; i < LED_MATRIX_COL_NUM; i++){
      old_picture_dots[i][j] = led_display_dots[i][j];
    }
  }

  for(j = 0; j < LED_MATRIX_ROW_NUM; j++){
    if(j - x < 0 || j - x >= LED_MATRIX_ROW_NUM ){
      // clear column
      for(i = 0; i < LED_MATRIX_COL_NUM; i++){
          led_display_dots[i][j] = 0;
      }
    }else{
      for(i = 0; i < LED_MATRIX_COL_NUM; i++){
        if(i - y < 0 || i - y >= LED_MATRIX_COL_NUM ){
          // clear over dots
          led_display_dots[i][j] = 0;
        }else{
          led_display_dots[i][j] = old_picture_dots[i-y][j-x];
        }
      }
    }
  }

  for(i = 0; i < LED_MATRIX_COL_NUM; i++){
    for(j = 0; j < LED_MATRIX_ROW_NUM; j++){
      LED_BUFF[led_location_16D35[i][j].rowIndex] |= led_display_dots[i][j] << led_location_16D35[i][j].comIndex;
    }
  }

  ht16d35b.LED_Show(LED_BUFF, sizeof(LED_BUFF));
}

/**
 * @brief: 点亮画面的一个x,y点
 * 
 * @param x: 水平轴位置
 * @param y: 垂直轴位置
 */
void DISPLAY_SCREEN::Set_Single_Dot(uint8_t x, uint8_t y)
{
  uint8_t i;
  uint8_t j;
  
  if(x >= LED_MATRIX_ROW_NUM || y >= LED_MATRIX_COL_NUM){
    return;
  }

  memset(LED_BUFF, 0, sizeof(LED_BUFF));
  led_display_dots[y][x] = 1;

  for(i = 0; i < LED_MATRIX_COL_NUM; i++){
    for(j = 0; j < LED_MATRIX_ROW_NUM; j++){
      LED_BUFF[led_location_16D35[i][j].rowIndex] |= led_display_dots[i][j] << led_location_16D35[i][j].comIndex;
    }
  }

  ht16d35b.LED_Show(LED_BUFF, sizeof(LED_BUFF));
}

/**
 * @brief: 熄灭画面的一个x,y点
 * 
 * @param x: 水平轴位置
 * @param y: 垂直轴位置
 */
void DISPLAY_SCREEN::Clear_Single_Dot(uint8_t x, uint8_t y)
{
  uint8_t i;
  uint8_t j;
  
  if(x >= LED_MATRIX_ROW_NUM || y >= LED_MATRIX_COL_NUM){
    return;
  }

  memset(LED_BUFF, 0, sizeof(LED_BUFF));
  led_display_dots[y][x] = 0;

  for(i = 0; i < LED_MATRIX_COL_NUM; i++){
    for(j = 0; j < LED_MATRIX_ROW_NUM; j++){
      LED_BUFF[led_location_16D35[i][j].rowIndex] |= led_display_dots[i][j] << led_location_16D35[i][j].comIndex;
    }
  }

  ht16d35b.LED_Show(LED_BUFF, sizeof(LED_BUFF));
}

/**
 * @brief: 设置将要播放的内置动画编号
 * 
 * @param Animation_No: 有效编号：3 ~ 15
 */
void DISPLAY_SCREEN::Play_Animation(uint8_t Animation_No)
{
	Play_LED_String("");
	LED_show_No = Animation_No;
}

// 循环执行的内置动画控制程序
void DISPLAY_SCREEN::Animation_Control(void)
{
	switch (LED_show_No)
	{
	case 0:
		// Serial.printf("### No Animation\n");
		break;
	case 1:
		break;
	case 3: //眨眼 8帧
		LED_delay_time = 200;
		if (LED_counter < 8)
		{
			current_time = millis();
			if ((current_time - last_led_time) > LED_delay_time)
			{
				Play_Thunder_Picture(LED_show_3[LED_counter]); //单色点阵图案
				last_led_time = millis();
				LED_counter++;
			}
		}
		else
		{
			LED_show_No = 0;
			LED_counter = 0;
			last_led_time = 0;
			LED_delay_time = 0;
		}
		break;
	case 4: //爱心  5帧
		LED_delay_time = 100;
		if (LED_counter < 5)
		{
			current_time = millis();
			if ((current_time - last_led_time) > LED_delay_time)
			{
				Play_Thunder_Picture(LED_show_4[LED_counter]); //单色点阵图案
				last_led_time = millis();
				LED_counter++;
			}
		}
		else
		{
			LED_show_No = 0;
			LED_counter = 0;
			last_led_time = 0;
			LED_delay_time = 0;
		}
		break;
	case 5: //眼镜  8帧
		if (LED_counter < 8)
		{
			current_time = millis();
			if ((current_time - last_led_time) > LED_delay_time)
			{
				Play_Thunder_Picture(LED_show_5[LED_counter]); //单色点阵图案
				last_led_time = millis();
				LED_delay_time = LED_time_5[LED_counter];
				LED_counter++;
			}
		}
		else
		{
			LED_show_No = 0;
			LED_counter = 0;
			last_led_time = 0;
			LED_delay_time = 0;
		}
		break;
	case 6: //严肃 4帧
		LED_delay_time = 200;
		if (LED_counter < 4)
		{
			current_time = millis();
			if ((current_time - last_led_time) > LED_delay_time)
			{
				Play_Thunder_Picture(LED_show_6[LED_counter]); //单色点阵图案
				last_led_time = millis();
				LED_counter++;
			}
		}
		else
		{
			LED_show_No = 0;
			LED_counter = 0;
			last_led_time = 0;
			LED_delay_time = 0;
		}
		break;
	case 7:	//刹车
		Play_Thunder_Picture(29); //单色点阵图案
		break;
	case 8: //流汗  3帧
		if (LED_counter < 3)
		{
			current_time = millis();
			if ((current_time - last_led_time) > LED_delay_time)
			{
				Play_Thunder_Picture(LED_show_8[LED_counter]); //单色点阵图案
				last_led_time = millis();
				LED_delay_time = LED_time_8[LED_counter];
				LED_counter++;
			}
		}
		else
		{
			LED_show_No = 0;
			LED_counter = 0;
			last_led_time = 0;
			LED_delay_time = 0;
		}
		break;
	case 9: //开心  5帧
		LED_delay_time = 200;
		if (LED_counter < 5)
		{
			current_time = millis();
			if ((current_time - last_led_time) > LED_delay_time)
			{
				Play_Thunder_Picture(LED_show_9[LED_counter]); //单色点阵图案
				last_led_time = millis();
				LED_counter++;
			}
		}
		else
		{
			LED_show_No = 0;
			LED_counter = 0;
			last_led_time = 0;
			LED_delay_time = 0;
		}
		break;
	case 10: //等待  3帧
		LED_delay_time = 1000;
		if (LED_counter < 3)
		{
			current_time = millis();
			if ((current_time - last_led_time) > LED_delay_time)
			{
				Play_Thunder_Picture(LED_show_10[LED_counter]); //单色点阵图案
				last_led_time = millis();
				LED_counter++;
			}
		}
		else
		{
			LED_show_No = 0;
			LED_counter = 0;
			last_led_time = 0;
			LED_delay_time = 0;
		}
		break;
	case 11: //眯眼 4帧
		LED_delay_time = 200;
		if (LED_counter < 4)
		{
			current_time = millis();
			if ((current_time - last_led_time) > LED_delay_time)
			{
				Play_Thunder_Picture(LED_show_11[LED_counter]); //单色点阵图案
				last_led_time = millis();
				LED_counter++;
			}
		}
		else
		{
			LED_show_No = 0;
			LED_counter = 0;
			last_led_time = 0;
			LED_delay_time = 0;
		}
		break;
	case 12: //启动 4帧
		LED_delay_time = 200;
		if (LED_counter < 4)
		{
			current_time = millis();
			if ((current_time - last_led_time) > LED_delay_time)
			{
				Play_Thunder_Picture(LED_show_12[LED_counter]); //单色点阵图案
				last_led_time = millis();
				LED_counter++;
			}
		}
		else
		{
			LED_show_No = 0;
			LED_counter = 0;
			last_led_time = 0;
			LED_delay_time = 0;
		}
		break;
	case 13: //凶  5帧
		LED_delay_time = 500;
		if (LED_counter < 5)
		{
			current_time = millis();
			if ((current_time - last_led_time) > LED_delay_time)
			{
				Play_Thunder_Picture(LED_show_13[LED_counter]); //单色点阵图案
				last_led_time = millis();
				LED_counter++;
			}
		}
		else
		{
			LED_show_No = 0;
			LED_counter = 0;
			last_led_time = 0;
			LED_delay_time = 0;
		}
		break;
	case 14: //哭泣  9帧
		LED_delay_time = 200;
		if (LED_counter < 9)
		{
			current_time = millis();
			if ((current_time - last_led_time) > LED_delay_time)
			{
				Play_Thunder_Picture(LED_show_14[LED_counter]); //单色点阵图案
				last_led_time = millis();
				LED_counter++;
			}
		}
		else
		{
			LED_show_No = 0;
			LED_counter = 0;
			last_led_time = 0;
			LED_delay_time = 0;
		}
		break;
	case 15: //语音图  5帧
		LED_delay_time = 100;
		if (LED_counter < 5)
		{
			current_time = millis();
			if ((current_time - last_led_time) > LED_delay_time)
			{
				Play_Thunder_Picture(LED_show_15[LED_counter]); //单色点阵图案
				last_led_time = millis();
				LED_counter++;
			}
		}
		else
		{
			LED_show_No = 0;
			LED_counter = 0;
			last_led_time = 0;
			LED_delay_time = 0;
		}
		break;
    default: break;
	}
}
